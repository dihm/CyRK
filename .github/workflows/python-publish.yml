# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
# and https://scikit-hep.org/developer/gha_wheels

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Upload to PyPI

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0 # Optional, use if you use setuptools_scm
            submodules: true # Optional, use if you have submodules

        - name: Build SDist
          run: python -m build --sdist

        - uses: actions/upload-artifact@v3
          with:
            path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # TODO: Skip ubuntu until issue figured out # ubuntu-latest
        os: [windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - uses: pypa/cibuildwheel@v2.11.3
        env:
          # Skip building on CPython 3.6, 3.7 on all platforms
          CIBW_SKIP: cp36-* cp37-* cp311-*

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  upload_all:
    name: Upload wheels to PyPI
    needs: [ build_wheels, make_sdist ]
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
